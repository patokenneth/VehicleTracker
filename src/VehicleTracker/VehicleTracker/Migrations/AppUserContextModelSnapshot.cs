// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VehicleTracker.DataContext;

namespace VehicleTracker.Migrations
{
    [DbContext(typeof(AppUserContext))]
    partial class AppUserContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("VehicleTracker.Models.ApplicationUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<byte[]>("Passwordsalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("password")
                        .HasColumnType("varbinary(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsAdmin = true,
                            Passwordsalt = new byte[] { 142, 95, 51, 68, 135, 40, 208, 87, 149, 213, 182, 148, 179, 209, 68, 24, 190, 142, 104, 212, 203, 192, 103, 121, 142, 94, 207, 31, 176, 124, 63, 94, 70, 199, 75, 16, 221, 157, 36, 66, 90, 232, 230, 120, 113, 56, 83, 46, 158, 32, 113, 193, 87, 166, 131, 118, 101, 148, 7, 30, 122, 191, 164, 14, 47, 240, 209, 90, 67, 94, 102, 176, 124, 239, 247, 148, 7, 166, 181, 4, 171, 183, 56, 57, 167, 58, 69, 205, 131, 219, 75, 242, 112, 171, 72, 39, 189, 55, 50, 80, 194, 90, 157, 228, 99, 75, 216, 122, 155, 254, 123, 245, 99, 172, 4, 67, 212, 126, 38, 227, 215, 254, 65, 73, 96, 1, 154, 117 },
                            Username = "Seven",
                            password = new byte[] { 254, 184, 221, 203, 53, 211, 117, 28, 129, 90, 244, 204, 25, 2, 183, 68, 55, 166, 16, 174, 57, 41, 150, 188, 135, 161, 230, 220, 103, 106, 251, 254, 116, 128, 20, 15, 52, 159, 194, 143, 102, 121, 238, 177, 211, 63, 217, 163, 33, 92, 154, 31, 71, 182, 203, 100, 204, 190, 154, 215, 11, 122, 77, 52 }
                        });
                });

            modelBuilder.Entity("VehicleTracker.Models.LocationDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Latitude")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Longitude")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime2");

                    b.Property<int>("VehicleID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VehicleID");

                    b.ToTable("Location");
                });

            modelBuilder.Entity("VehicleTracker.Models.Vehicle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("RegistrationDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Vehicles");
                });

            modelBuilder.Entity("VehicleTracker.Models.LocationDetail", b =>
                {
                    b.HasOne("VehicleTracker.Models.Vehicle", "Vehicle")
                        .WithMany()
                        .HasForeignKey("VehicleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vehicle");
                });
#pragma warning restore 612, 618
        }
    }
}
